{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","container/robots.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","width","height","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","username","App","onSearchChange","event","target","value","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f3ea740.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card =({id, name, email}) =>{\r\n\treturn(\r\n        <div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n        <img alt='robots' width=\"200\" height=\"200\" src={`https://robohash.org/${id} `}/>\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n        </div>\r\n\t\t);\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList =({robots}) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t{\r\n\t\t\trobots.map((user ,i) =>{\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<Card\r\n                    key ={i}\r\n                    id ={robots[i].id}\r\n                    name ={robots[i].name}\r\n                    email ={robots[i].email}\r\n                    />\r\n\t\t\t\t\t);\r\n                })\r\n\t\t}\r\n\t\t\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox =({searchfield, searchChange}) =>{\r\n\treturn(\r\n        <div className ='pa3'>\r\n        <input\r\n        className='pa2 ba b--blue bg-lightest-green'\r\n        type='search'\r\n        placeholder='Search friends'\r\n        onChange={searchChange}\r\n        />\r\n        </div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style = {{overflowY :'scroll', border :'3px solid black', height : '320px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t\tthis.state ={\r\n\t\t\thasError : false\r\n\t\t}\r\n\t}\r\n\tcomponentDidCatch(error , info){\r\n\t\tthis.setState({hasError : true})\r\n\t}\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1> OOOPS. There is an ERROR!!</h1>\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","export const robots = [\n  {\n    id: 0,\n    name: 'Manisha M Shaju',\n    username: 'mani',\n    email: 'manishashaju@gmail.com'\n  },\n  {\n    id: 1,\n    name: 'Leander Joseph',\n    username: 'lee',\n    email: 'leander@gmail.com'\n  },\n  {\n    id: 2,\n    name: 'Siri Spandana',\n    username: 'siri',\n    email: 'siri@gmail.com'\n  },\n  {\n    id: 3,\n    name: 'Nimisha Shaju',\n    username: 'nimisha',\n    email: 'nimisha@gmail.com'\n  },\n  {\n    id: 4,\n    name: 'Lateef Ulla Khan',\n    username: 'lateef',\n    email: 'lateef@gmail.com'\n  },\n  {\n    id: 5,\n    name: 'Abdul Basith',\n    username: 'basith',\n    email: 'basith@gmail.com'\n  },\n  {\n    id: 6,\n    name: 'Mayuri Prakash',\n    username: 'mayuri',\n    email: 'mayur@gmail.com'\n  },\n  {\n    id: 7,\n    name: 'Emaad Jaffer',\n    username: 'emaad',\n    email: 'emaad@gmail.com'\n  },\n  {\n    id: 8,\n    name: 'Lee Min-ho',\n    username: 'leee',\n    email: 'lee@gmail.com'\n  },\n  {\n    id: 9,\n    name: 'Park Seo-joon',\n    username: 'park',\n    email: 'park@gmail.com'\n  },\n  {\n    id: 10,\n    name: 'Kim Nam-joon',\n    username: 'rm',\n    email: 'nam_joon@gmail.com'\n  },\n];\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from'../components/ErrorBoundry';\r\nimport {robots} from './robots';\r\nimport './App.css'\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\trobots:robots,\r\n\t\t\tsearchfield:''\r\n\r\n\t\t}\r\n\t}\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value})\r\n\t}\r\n\trender(){\r\n\t\tconst { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robots =>{\r\n        \treturn robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ? \r\n        <h1> loading </h1> :\r\n         (\r\n            <div className = 'tc'>\r\n            <h1 className= 'f1'> RoboFriends</h1>\r\n            <SearchBox searchChange ={this.onSearchChange}/>\r\n            <Scroll>\r\n            <ErrorBoundry>\r\n            <CardList robots ={filteredRobots}/>\r\n            </ErrorBoundry>\r\n            </Scroll>\r\n            </div>\r\n        \t);\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nReactDOM.render(<App/> ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}